{"version":3,"sources":["component/info/Info.module.css","component/Lights/Lights.module.scss","component/info/Info.jsx","redux/reducer.js","component/Lights/Lights.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","connect","state","go","reducer","count","className","style","info","info_text","info_timer","CHANGE_COUNT","DECREASE_COUNT","CHANGE_GO","CHANGE_LIGHT","initialState","idLight","arrColors","id","color","time","Lights","this","props","changeGo","changeCount","light","changeLight","history","push","APP_NAME","action","React","Component","bool","type","withRouter","App","setInterval","decreaseCount","to","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92b0027e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__2s-dC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"green\":\"Lights_green__1wlpK\",\"red\":\"Lights_red__2AGMb\",\"yellow\":\"Lights_yellow__1XkCb\",\"action\":\"Lights_action__2KxKs\",\"blinkerGreen\":\"Lights_blinkerGreen__1anmb\",\"blinkerYellow\":\"Lights_blinkerYellow__1Nqmc\",\"blinkerRed\":\"Lights_blinkerRed__2MqHP\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport style from './Info.module.css'\r\n\r\nconst Info = ({go, count}) => {\r\n  return (\r\n    <div className={style.info}>\r\n      <div className={style.info_text}>\r\n        {go ? <div>GO!</div> : <div>Please, wait!</div>}\r\n      </div>\r\n      <div className={style.info_timer}>\r\n        {`0:${(count<10) ? 0 : ''}${count}`}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    go: state.reducer.go,\r\n    count: state.reducer.count,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Info)","const CHANGE_COUNT = 'CHANGE-COUNT';\r\nconst DECREASE_COUNT = 'DECREASE-COUNT';\r\nconst CHANGE_GO = 'CHANGE-GO';\r\nconst CHANGE_LIGHT = 'CHANGE-LIGHT';\r\n\r\n\r\nconst initialState = {\r\n  count: 20,\r\n  go: false,\r\n  idLight: 0,\r\n  arrColors: [{\r\n    id: 0,\r\n    color: 'red',\r\n    time: 10,\r\n    go: false,\r\n  },\r\n  {\r\n    id: 1,\r\n    color: 'yellow',\r\n    time: 3,\r\n    go: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    color: 'green',\r\n    time: 15,\r\n    go: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    color: 'yellow',\r\n    time: 3,\r\n    go: false,\r\n  }],\r\n\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_COUNT: {\r\n      // debugger\r\n      return { ...state, count: action.count }\r\n    }\r\n\r\n    case CHANGE_LIGHT: {\r\n      return { ...state, idLight: action.id }\r\n    }\r\n\r\n    case CHANGE_GO: {\r\n      return { ...state, go: action.bool }\r\n    }\r\n\r\n    case DECREASE_COUNT: {\r\n      return { ...state, count: --state.count }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const changeCount = (count) => {\r\n  return { type: CHANGE_COUNT, count }\r\n}\r\n\r\nexport const changeLight = (id) => {\r\n  return { type: CHANGE_LIGHT, id }\r\n}\r\n\r\nexport const decreaseCount = () => {\r\n  return { type: DECREASE_COUNT }\r\n}\r\n\r\nexport const changeGo = (bool) => {\r\n  return { type: CHANGE_GO, bool }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\nimport { changeCount, changeGo, changeLight } from '../../redux/reducer'\r\nimport style from './Lights.module.scss'\r\nimport { APP_NAME } from '../../App'\r\n\r\nclass Lights extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { changeGo, changeCount, arrColors, idLight } = this.props;\r\n    const light = arrColors[idLight];\r\n    changeCount(light.time);\r\n    changeGo(light.go);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { count, idLight, arrColors, changeLight, history } = this.props;\r\n    if (count === 0) {\r\n      // длинну массива\r\n      if (idLight === 3) {\r\n        history.push(`${APP_NAME}/${arrColors[0].color}`);\r\n        changeLight(0);\r\n      } else {\r\n        history.push(`${APP_NAME}/${arrColors[idLight + 1].color}`);\r\n        changeLight(idLight + 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { count, idLight, arrColors} = this.props\r\n    return <div className={`${style[arrColors[idLight].color]} ${(count <= 2) ? style.action : ''}`}/>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    count: state.reducer.count,\r\n    idLight: state.reducer.idLight,\r\n    arrColors: state.reducer.arrColors\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { changeGo, changeCount, changeLight })(withRouter(Lights))","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route} from 'react-router';\nimport './App.css';\nimport Info from './component/info/Info';\nimport Lights from './component/Lights/Lights';\nimport { decreaseCount } from './redux/reducer';\n\n\nexport const APP_NAME = '/traffic-lights';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    setInterval(()=>{\n      this.props.decreaseCount();\n    }, 1000)\n  }\n\n  render() {\n    return (\n      <div className='app-wrapper'>\n        <div className='app'>\n          <Info />\n          <div className='traffic-light'>\n            <Redirect to={`${APP_NAME}/red`}/>\n            <div className='red-off'>\n              <Route path={`${APP_NAME}/red`} render={() => <Lights />} />\n            </div>\n            <div className='yellow-off'>\n              <Route path={`${APP_NAME}/yellow`} render={() => <Lights />} />\n            </div>\n            <div className='green-off'>\n              <Route path={`${APP_NAME}/green`} render={() => <Lights />} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect (null, {decreaseCount})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport { reducer } from \"./reducer.js\";\r\n\r\nlet reducers = combineReducers({\r\n  reducer: reducer,\r\n})\r\n\r\nexport let store = createStore(reducers)\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store} >\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}